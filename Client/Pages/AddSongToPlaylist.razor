@page "/AddSongToPlaylist"
@inject HttpClient Http
@using music_manager_starter.Shared

<div class="p-6">
    <h2 class="text-xl font-semibold text-white">Add New Song</h2>
    <EditForm Model="new_playlist_track" OnValidSubmit="HandleValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="mb-4">
            <label class="block text-gray-200">Playlist</label>
            <InputText @bind-Value="playlist_name" class="mt-1 block w-full p-2 border rounded" />
        </div>
        <div class="mb-4">
            <label class="block text-gray-200">Song</label>
            <InputText @bind-Value="song_name" class="mt-1 block w-full p-2 border rounded" />
        </div>
        <button type="submit" class="bg-purple-600 text-white px-4 py-2 rounded">Add Song</button>
    </EditForm>

    @if (message != null)
    {
        <p class="mt-4 text-green-500">@message</p>
    }
</div>

@code {
    private PlaylistTracks new_playlist_track = new PlaylistTracks();
    private string message;
    private List<Playlist> playlists;
    private List<Song> songs;
    private string song_name;
    private string playlist_name;
    private bool valid_song = false;
    private bool valid_playlist = false;

    protected override async Task OnInitializedAsync()
    {
        playlists = await Http.GetFromJsonAsync<List<Playlist>>("api/Playlists");
        songs = await Http.GetFromJsonAsync<List<Song>>("api/songs");
    }
    
    private async Task HandleValidSubmit()
    {
        foreach(var song in songs)
        {
            if(song.Title == song_name)
            {
                valid_song = true;
                new_playlist_track.SongId = song.Id;
            }
        }
        foreach(var playlist in playlists)
        {
            if(playlist.Name == playlist_name)
            {
                valid_playlist = true;
                new_playlist_track.PlaylistId = playlist.Id;
            }
        }
        if (!valid_song)
        {
            message = "Error finding song. Verify the song name is correct.";
        }
        else if (!valid_playlist)
        {
            message = "Error finding playlist. Verify the playlist name is correct.";
        }
        else
        {
            var response = await Http.PostAsJsonAsync("api/PlaylistTracks", new_playlist_track);
            if (response.IsSuccessStatusCode)
            {
                message = "Song added successfully!";
                new_playlist_track = new PlaylistTracks(); 
            }
            else
            {
                message = "Error adding song. Please try again.";
            }
        }
    }
}
